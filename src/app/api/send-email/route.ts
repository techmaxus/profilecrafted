import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

// CORS headers
const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
  'Access-Control-Allow-Headers': 'Content-Type, Authorization',
};

export async function OPTIONS() {
  return NextResponse.json({}, { headers: corsHeaders });
}

export async function POST(request: NextRequest) {
  try {
    const { email, essay } = await request.json();

    if (!email || !essay) {
      return NextResponse.json(
        { error: 'Email and essay are required' },
        { status: 400, headers: corsHeaders }
      );
    }

    // Check if Gmail SMTP is configured
    if (!process.env.GMAIL_USER || !process.env.GMAIL_APP_PASSWORD) {
      console.log('ðŸ“§ Gmail SMTP not configured, simulating email send');
      
      // Simulate successful email send for demo purposes
      return NextResponse.json({
        success: true,
        message: 'Email functionality not configured. In production, this would send the essay to your email.',
        recipient: email,
        wordCount: essay.trim().split(/\s+/).length,
        sentAt: new Date().toISOString()
      }, {
        headers: corsHeaders
      });
    }

    // Configure Gmail SMTP transporter
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_APP_PASSWORD,
      },
    });

    // Email content
    const mailOptions = {
      from: `"ProfileCrafted" <${process.env.GMAIL_USER}>`,
      to: email,
      subject: 'Your APM Application Essay - ProfileCrafted',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <h2 style="color: #4F46E5;">Your APM Application Essay</h2>
          <p>Hi there!</p>
          <p>Here's your personalized APM application essay generated by ProfileCrafted:</p>
          
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <pre style="white-space: pre-wrap; font-family: Georgia, serif; line-height: 1.6; margin: 0;">${essay}</pre>
          </div>
          
          <p><strong>Word Count:</strong> ${essay.trim().split(/\s+/).length} words</p>
          
          <hr style="margin: 30px 0; border: none; border-top: 1px solid #e5e7eb;">
          
          <p style="font-size: 14px; color: #6b7280;">
            Generated by <a href="https://profilecrafted.com" style="color: #4F46E5;">ProfileCrafted</a><br>
            Vibe coded by <a href="https://www.linkedin.com/in/techmaxus/" style="color: #4F46E5;">Lakshay Kapoor</a>
          </p>
        </div>
      `,
      text: `Your APM Application Essay\n\n${essay}\n\nWord Count: ${essay.trim().split(/\s+/).length} words\n\nGenerated by ProfileCrafted\nVibe coded by Lakshay Kapoor (https://www.linkedin.com/in/techmaxus/)`
    };

    // Send email
    await transporter.sendMail(mailOptions);
    console.log(`ðŸ“§ Essay sent successfully to: ${email}`);
    
    return NextResponse.json({
      success: true,
      message: 'Essay sent successfully!',
      recipient: email,
      wordCount: essay.trim().split(/\s+/).length,
      sentAt: new Date().toISOString()
    }, {
      headers: corsHeaders
    });

  } catch (error) {
    console.error('Email sending error:', error);
    
    return NextResponse.json(
      { error: 'Failed to send email' },
      { status: 500, headers: corsHeaders }
    );
  }
}
